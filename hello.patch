Index: app/src/main/java/com/tapbi/demomessage/fragment/SendMessageFragment.java
===================================================================
--- app/src/main/java/com/tapbi/demomessage/fragment/SendMessageFragment.java	(date 1593068554000)
+++ app/src/main/java/com/tapbi/demomessage/fragment/SendMessageFragment.java	(date 1593068554000)
@@ -1,7 +0,0 @@
-package com.tapbi.demomessage.fragment;
-
-import androidx.fragment.app.Fragment;
-
-public class SendMessageFragment extends Fragment {
-    
-}
Index: app/src/main/java/com/tapbi/demomessage/SearchActivity.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/com/tapbi/demomessage/SearchActivity.java	(date 1593068554000)
+++ app/src/main/java/com/tapbi/demomessage/SearchActivity.java	(date 1593099835115)
@@ -28,7 +28,7 @@
 
 public class SearchActivity extends AppCompatActivity implements View.OnClickListener, ContactAdapter.OnCallBack {
     private RecyclerView rvContact;
-    private List<ItemContact> contactList;
+    private List<ItemContact> contactList, contactListFull;
     private ContactAdapter contactAdapter;
     private EditText ed_search, ed_send;
     private ImageButton ib_back, ib_send_message;
@@ -43,6 +43,7 @@
         super.onCreate(savedInstanceState);
          setContentView(R.layout.activity_search);
         checkPermission();
+        contactListFull = getListContacts();
     }
 
     public void checkPermission(){
@@ -67,6 +68,7 @@
         rvContact.setHasFixedSize(true);
         
         contactList = getListContacts();
+
         contactAdapter = new ContactAdapter(contactList, this);
         rvContact.setAdapter(contactAdapter);
         rvContact.setLayoutManager(new LinearLayoutManager(this));
@@ -142,7 +144,11 @@
             }
         }
         //calling a method of the adapter class and passing the filtered list
-        contactAdapter.filterList(filterdNames);
+        if (name.length()==0){
+            contactAdapter.filterList((ArrayList<ItemContact>) contactListFull);
+        } else {
+            contactAdapter.filterList(filterdNames);
+        }
     }
 
     @Override
Index: app/src/main/java/com/tapbi/demomessage/SendMessageActivity.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/com/tapbi/demomessage/SendMessageActivity.java	(date 1593068554000)
+++ app/src/main/java/com/tapbi/demomessage/SendMessageActivity.java	(date 1593081746706)
@@ -45,9 +45,10 @@
         setContentView(R.layout.activity_message);
          checkPermission();
         initView();
-
+        
     }
 
+
     public void checkPermission(){
         ActivityCompat.requestPermissions(this, new String[]{Manifest.permission.SEND_SMS}, REQUEST_CODE_ASK_PERMISSIONS_SENDSMS);
     }
@@ -66,7 +67,7 @@
 
         name = intent.getStringExtra("name");
         messageList = getSMS();
-      //  id = messageList.get(position).getId();
+
         ib_back_message = findViewById(R.id.ib_back_message);
         ib_back_message.setOnClickListener(this);
 
@@ -88,10 +89,6 @@
            tv_name_contact.setText(name);
            address = name;
        }
-       
-         rv_list_message = findViewById(R.id.rv_message);
-         rv_list_message.setHasFixedSize(true);
-
          loadAllListMessage();
 //        SendMessageAsyncTask sendMessageAsyncTask = new SendMessageAsyncTask();
 //        sendMessageAsyncTask.execute(id);
@@ -99,6 +96,8 @@
 
     }
     private void loadAllListMessage(){
+        rv_list_message = findViewById(R.id.rv_message);
+        rv_list_message.setHasFixedSize(true);
         messageList = getListMessage(address);
         listMessageAdapter = new ListMessageAdapter(messageList);
         rv_list_message.setAdapter(listMessageAdapter);
@@ -116,6 +115,7 @@
         itemMessage1.setId(cursor.getInt(cursor.getColumnIndexOrThrow("_id")));
         itemMessage1.setName(cursor.getString(cursor.getColumnIndexOrThrow("address")));
         itemMessage1.setContent(cursor.getString(cursor.getColumnIndexOrThrow("body")));
+        itemMessage1.setNumber(cursor.getString(cursor.getColumnIndexOrThrow("address")));
         list.add(itemMessage1);
         cursor.moveToNext();
         while (!cursor.isAfterLast()) {
@@ -187,7 +187,8 @@
             case R.id.ib_send_message:
                 if (sendSMS){
                     doSendMessages();
-                    loadAllListMessage();
+                   initView();
+                    ed_send_message.setText(null);
                 }
                 
                 break;
Index: app/src/main/java/com/tapbi/demomessage/MainActivity.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/com/tapbi/demomessage/MainActivity.java	(date 1593068554000)
+++ app/src/main/java/com/tapbi/demomessage/MainActivity.java	(date 1593103291174)
@@ -1,10 +1,12 @@
 package com.tapbi.demomessage;
 
+import android.content.ContentResolver;
 import android.content.Intent;
 import android.content.pm.PackageManager;
 import android.database.Cursor;
 import android.net.Uri;
 import android.os.Bundle;
+import android.provider.ContactsContract;
 import android.view.View;
 import android.widget.Button;
 
@@ -15,6 +17,7 @@
 import androidx.recyclerview.widget.RecyclerView;
 
 import com.tapbi.demomessage.addapter.MessageAdapter;
+import com.tapbi.demomessage.dto.ItemContact;
 import com.tapbi.demomessage.dto.ItemMessage;
 
 import java.util.ArrayList;
@@ -24,6 +27,7 @@
     private RecyclerView recyclerView;
     private MessageAdapter messageAdapter;
     private List<ItemMessage> messageList;
+    private List<ItemContact> contactList;
     private Button btn_add_message;
     final int REQUEST_CODE_ASK_PERMISSIONS = 123;
     final int REQUEST_CODE_ASK_PERMISSIONS_CONTACT = 123;
@@ -35,8 +39,30 @@
         super.onCreate(savedInstanceState);
         setContentView(R.layout.activity_main);
         checkPermission();
+
+        contactList = getListContacts();
+
        // displaySmsLog();
     }
+
+
+//    private void displaySmsLog() {
+//        Uri allMessages = Uri.parse("content://sms/");
+//        //Cursor cursor = managedQuery(allMessages, null, null, null, null); Both are same
+//        Cursor cursor = this.getContentResolver().query(allMessages, null,
+//                null, null, null);
+//        cursor.moveToNext();
+//        while (!cursor.isAfterLast()) {
+//            for (int i = 0; i <cursor.getColumnCount(); i++) {
+//                Log.d(cursor.getColumnName(i) + "", cursor.getString(i) + "");
+//
+//            }
+//            Log.d("One row finished",
+//                    "**************************************************");
+//            cursor.moveToNext();
+//        }
+//
+//    }
    private void checkPermission(){
        ActivityCompat.requestPermissions(
                MainActivity.this, new String[]{"android.permission.READ_SMS"}, REQUEST_CODE_ASK_PERMISSIONS);
@@ -79,9 +105,19 @@
 
           ItemMessage itemMessage = new ItemMessage();
           itemMessage.setId(cursor.getInt(cursor.getColumnIndexOrThrow("_id")));
-          itemMessage.setName(cursor.getString(cursor.getColumnIndexOrThrow("address")));
+            String ddd = convertChar(cursor.getString(cursor.getColumnIndexOrThrow("address")));
+          for (ItemContact x:contactList){
+                if (convertChar(cursor.getString(cursor.getColumnIndexOrThrow("address"))).equals(x.getNumber())){
+                    itemMessage.setName(x.getName());
+                }
+                else {
+                    itemMessage.setName(cursor.getString(cursor.getColumnIndexOrThrow("address")));
+                }
+               
+          }
+        // itemMessage.setName(cursor.getString(cursor.getColumnIndexOrThrow("address")));
           itemMessage.setContent(cursor.getString(cursor.getColumnIndexOrThrow("body")));
-          
+
           if (check(list, itemMessage.getName())){
               list.add(itemMessage);
           }
@@ -90,6 +126,14 @@
         return list;
     }
 
+    public String convertChar(String s){
+        String s1 = s;
+       if (s.charAt(0) == '+' && s.charAt(1) == '8' && s.charAt(2) == '4'){
+           s1 = s.substring(3,s.length());
+       }
+       return s1;
+    }
+
     public boolean check(List<ItemMessage> list, String address){
         for (int i =0 ; i< list.size(); i++){
             if ((list.get(i).getName()).equals(address)){
@@ -99,6 +143,43 @@
         return true;
     }
 
+    private List<ItemContact> getListContacts() {
+        List<ItemContact> list = new ArrayList<ItemContact>();
+
+        ContentResolver contentResolver = getContentResolver();
+        Cursor cursor = contentResolver.query(ContactsContract.Contacts.CONTENT_URI, null, null, null, ContactsContract.CommonDataKinds.Phone.DISPLAY_NAME + " ASC");
+        if (cursor.getCount() > 0) {
+            while (cursor.moveToNext()) {
+
+                int hasPhoneNumber = Integer.parseInt(cursor.getString(cursor.getColumnIndex(ContactsContract.Contacts.HAS_PHONE_NUMBER)));
+                if (hasPhoneNumber > 0) {
+                    String id = cursor.getString(cursor.getColumnIndex(ContactsContract.Contacts._ID));
+                    String name = cursor.getString(cursor.getColumnIndex(ContactsContract.Contacts.DISPLAY_NAME));
+                    Cursor phoneCursor = contentResolver.query(
+                            ContactsContract.CommonDataKinds.Phone.CONTENT_URI,
+                            null,
+                            ContactsContract.CommonDataKinds.Phone.CONTACT_ID + " = ?", new String[]{id},
+                            null);
+                    if (phoneCursor != null) {
+                        if (phoneCursor.moveToNext()) {
+                            String phoneNumber = phoneCursor.getString(phoneCursor.getColumnIndex(ContactsContract.CommonDataKinds.Phone.NUMBER));
+
+                            ItemContact itemContact = new ItemContact();
+                            itemContact.setName(name);
+                            itemContact.setNumber(phoneNumber);
+
+                            list.add(itemContact);
+
+                            phoneCursor.close();
+                        }
+                    }
+                }
+            }
+        }
+        return list;
+    }
+
+
     @Override
     public void onClick(View view) {
         switch (view.getId()){
Index: app/src/main/java/com/tapbi/demomessage/addapter/ContactAdapter.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/com/tapbi/demomessage/addapter/ContactAdapter.java	(date 1593068554000)
+++ app/src/main/java/com/tapbi/demomessage/addapter/ContactAdapter.java	(date 1593073120067)
@@ -19,8 +19,6 @@
 public class ContactAdapter extends RecyclerView.Adapter<ContactAdapter.ViewHolderContact> {
     private List<ItemContact> contactList;
     private OnCallBack mListener;
-    private int VIEW_TYPE_LOADING = 1;
-    private int VIEW_TYPE_ITEM = 0;
 
     public ContactAdapter(List<ItemContact> contactList, OnCallBack listener) {
         this.contactList = contactList;
@@ -28,7 +26,8 @@
     }
 
     public void filterList(ArrayList<ItemContact> filterdNames) {
-       this.contactList = filterdNames;
+        this.contactList.clear();
+       this.contactList.addAll(filterdNames);
         notifyDataSetChanged();
     }
 
Index: app/src/main/java/com/tapbi/demomessage/dto/ItemContact.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/com/tapbi/demomessage/dto/ItemContact.java	(date 1593068554000)
+++ app/src/main/java/com/tapbi/demomessage/dto/ItemContact.java	(date 1593083684365)
@@ -1,6 +1,8 @@
 package com.tapbi.demomessage.dto;
 
-public class ItemContact {
+import java.io.Serializable;
+
+public class ItemContact  implements Serializable {
     private String name;
     private String number;
 
